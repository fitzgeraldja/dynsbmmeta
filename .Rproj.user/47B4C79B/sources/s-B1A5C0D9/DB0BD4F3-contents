setwd("/home/fitzgeraldj/Documents/main_project/confirmation/code/dynsbm_meta/dynsbmmeta/")
library(dynsbmmeta)
library(dplyr)

ret_best <- FALSE
nstarts <- 15

# A has count data, A_w has inverse n_au weighting per paper, so likely better to use Gaussian than Poisson
files <- list.files(path="/home/fitzgeraldj/Documents/main_project/confirmation/code/dynsbm_meta/R_data/",pattern="^bunt.*\\.gzip$",full.names = TRUE)
nfiles <- length(files)
for (i in 1:nfiles){
  load(files[i])
}

bunt_A <- eval(parse(text="bunt_A"))
if (storage.mode(bunt_A)!= "integer") storage.mode(bunt_A) <- "integer"
# col_A_w <- eval(parse(text="col_A_w"))
# NB need to take final 4 periods out of all 8 for metadata
bunt_gender<- eval(parse(text="bunt_gender"))
bunt_program <- eval(parse(text="bunt_program"))
bunt_smoking <- eval(parse(text="bunt_smoking"))
# col_ages <- col_ages[5:8,,,drop=F]
# col_subjs <- col_subjs[5:8,,]
# col_insts <- col_insts[5:8,,]


# choose 21 on basis that Louvain found 27 groups, but effective number was only 21, so most could be absorbed
# don't have time to run for other options
Qmin <- 4
Qmax <- 4

list.dynsbmmeta <- list()
best.icls <- list()
ttimes <- list()

tungap <- 0.1
for (tun.param in seq(from=1,to=0,by=-tungap)){
  print(paste("Tuning param:",tun.param))
  ptm <- proc.time() # start timing
  results <- select.dynsbmmeta(Y = bunt_A, X = append(list(bunt_gender),append(list(bunt_program),list(bunt_smoking))), Qmin = Qmin, Qmax = Qmax, edge.type = "discrete", K=5, meta.types = c("categorical x 2","categorical x 3","categorical x 2"), meta.tuning=c(tun.param), nb.cores = 30, nstart = nstarts, iter.max = 30,
                               ret_best = ret_best,
                               directed=TRUE,
                               return.marginals=TRUE,
                               # save.on.run=TRUE,
                               # save.path="/home/fitzgeraldj/Documents/main_project/confirmation/code/dynsbm_meta/R_data/col_au_ref_results.R",
  ) # note default is 25 starts, 20 iterations max, but on average only need a few iterations
  ttime <- proc.time() - ptm # stop the clock
  print("Time to run w metadata for Bunt dataset w this tun.param")
  print(ttime)
  print(paste("Best ICL: ",
              max(sapply(results, function(x) compute.icl(x,meta.types = c("categorical x 2","categorical x 3","categorical x 2"))))))
  
  if (ret_best) print(paste("Ran",results[[1]]$iter,"iterations"))
  for (res in results){
    list.dynsbmmeta[[length(list.dynsbmmeta)+1]] <- res
  }
  # best.icls[[length(best.icls)+1]] <- compute.icl(tail(results,n=1),meta.types = c("categorical x 2","categorical x 3","categorical x 2"))
  ttimes[[length(ttimes)+1]] <- ttime
}



# to save
Q <- Qmin
if (ret_best){
  for (i in 1:length(list.dynsbmmeta)){
    # if (i>(Q+1-Qmin)*(nstarts+1)){
    #   Q <- Q + 1
    # }
    memb <- list.dynsbmmeta[[i]]$membership
    trans <- list.dynsbmmeta[[i]]$trans
    icl <- lapply(list.dynsbmmeta, function(x) compute.icl(x,meta.types = c("categorical x 2","categorical x 3","categorical x 2")))
    gender_params <- lapply(list.dynsbmmeta, function(x) x$varphi[[1]])
    program_params <- lapply(list.dynsbmmeta, function(x) x$varphi[[2]])
    smoking_params <- lapply(list.dynsbmmeta, function(x) x$varphi[[3]])
    
    # save(memb,file=paste("/home/fitzgeraldj/Documents/main_project/confirmation/code/dynsbm_meta/R_data/test",testno,"_q",Q,"_Z.Rdata",sep=""))
    # save(trans,file=paste("/home/fitzgeraldj/Documents/main_project/confirmation/code/dynsbm_meta/R_data/test",testno,"_q",Q,"_trans.Rdata",sep=""))
    # save(icl,file=paste("/home/fitzgeraldj/Documents/main_project/confirmation/code/dynsbm_meta/R_data/test",testno,"_q",Q,"_icl.Rdata",sep=""))
    # save(bern_params,file=paste("/home/fitzgeraldj/Documents/main_project/confirmation/code/dynsbm_meta/R_data/test",testno,"_q",Q,"_bernp.Rdata",sep=""))
    # save(pois_params,file=paste("/home/fitzgeraldj/Documents/main_project/confirmation/code/dynsbm_meta/R_data/test",testno,"_q",Q,"_poisp.Rdata",sep=""))
    # print(paste("Success for test",testno))
  }
}else{
  memb <- lapply(list.dynsbmmeta, function(x) x$membership)
  trans <- lapply(list.dynsbmmeta, function(x) x$trans)
  icl <- lapply(list.dynsbmmeta, function(x) compute.icl(x,meta.types = c("categorical x 2","categorical x 3","categorical x 2")))
  gender_params <- lapply(list.dynsbmmeta, function(x) x$varphi[[1]])
  program_params <- lapply(list.dynsbmmeta, function(x) x$varphi[[2]])
  smoking_params <- lapply(list.dynsbmmeta, function(x) x$varphi[[3]])
  taum <- lapply(list.dynsbmmeta, function(x) x$fin.taum)
  beta <- lapply(list.dynsbmmeta, function(x) x$beta)
  print("Attempting to save...")
  save(memb,file="/home/fitzgeraldj/Documents/main_project/confirmation/code/dynsbm_meta/R_data/tunbunt_Z_full.Rdata")
  save(trans,file="/home/fitzgeraldj/Documents/main_project/confirmation/code/dynsbm_meta/R_data/tunbunt_trans_full.Rdata")
  save(icl,file="/home/fitzgeraldj/Documents/main_project/confirmation/code/dynsbm_meta/R_data/tunbunt_icl_full.Rdata")
  save(gender_params,file="/home/fitzgeraldj/Documents/main_project/confirmation/code/dynsbm_meta/R_data/tunbunt_gender_params_full.Rdata")
  save(program_params,file="/home/fitzgeraldj/Documents/main_project/confirmation/code/dynsbm_meta/R_data/tunbunt_program_params_full.Rdata")
  save(smoking_params,file="/home/fitzgeraldj/Documents/main_project/confirmation/code/dynsbm_meta/R_data/tunbunt_smoking_params_full.Rdata")
  save(taum,file="/home/fitzgeraldj/Documents/main_project/confirmation/code/dynsbm_meta/R_data/tunbunt_taum_full.Rdata")
  save(beta,file="/home/fitzgeraldj/Documents/main_project/confirmation/code/dynsbm_meta/R_data/tunbunt_beta_full.Rdata")
  print("Success")
}

save(ttimes,file="/home/fitzgeraldj/Documents/main_project/confirmation/code/dynsbm_meta/R_data/tunbunt_ttime.Rdata")


